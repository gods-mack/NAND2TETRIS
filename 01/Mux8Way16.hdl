// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    Mux4Way16(a[0..15]=a[0..15], b[0..15]=b[0..15], c[0..15]=c[0..15], d[0..15]=d[0..15], sel[0..1]=sel[0..1], out[0..15]=mux4way16a);
    Mux4Way16(a[0..15]=e[0..15], b[0..15]=f[0..15], c[0..15]=g[0..15], d[0..15]=h[0..15], sel[0..1]=sel[0..1], out[0..15]=mux4way16b);
    Not(in=sel[2], out=nots2);

    And16(a[0]=nots2, a[1]=nots2, a[2]=nots2, a[3]=nots2, a[4]=nots2, a[5]=nots2, a[6]=nots2, a[7]=nots2, a[8]=nots2, a[9]=nots2, a[10]=nots2, a[11]=nots2, a[12]=nots2, a[13]=nots2, a[14]=nots2, a[15]=nots2, b=mux4way16a, out=boola);

    And16(a[0]=sel[2], a[1]=sel[2], a[2]=sel[2], a[3]=sel[2], a[4]=sel[2], a[5]=sel[2], a[6]=sel[2], a[7]=sel[2], a[8]=sel[2], a[9]=sel[2], a[10]=sel[2], a[11]=sel[2], a[12]=sel[2], a[13]=sel[2], a[14]=sel[2], a[15]=sel[2], b=mux4way16b, out=boolb);

    Or16(a=boola, b=boolb, out=out);
}