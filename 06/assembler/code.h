
// mnemonics code file

#ifndef _CODE_H
#define _CODE_H

#include<bits/stdc++.h>
using namespace std;

unordered_map<string,string> opcode = {
		// Comp. (a=0)
		{"0",		"101010"},
		{"1",		"111111"},
		{"-1", 		"111010"},
		{"D",		"001100"},
		{"A",		"110000"},
		{"!D", 		"001101"},
		{"!A", 		"110001"},
		{"-D", 		"001111"},
		{"-A", 		"110011"},
		{"D+1", 	"011111"},
		{"A+1", 	"110111"},
		{"D-1", 	"001110"},
		{"A-1", 	"110010"},
		{"D+A", 	"000010"},
		{"D-A", 	"001001"},
		{"A-D", 	"000111"},
		{"D&A", 	"000000"},
		{"D|A", 	"010101"},
		// Comp. (a=1)					
		{"M",		"110000"},	
		{"!M", 		"110001"},
		{"-M", 		"110011"},
		{"M+1", 	"110111"},
		{"M-1", 	"110010"},
		{"D+M", 	"000010"},
		{"D-M", 	"000010"},
		{"M-D", 	"000111"},
		{"D&M", 	"000000"},
		{"D|M", 	"010101"}	
	};

unordered_map<string,string> jumps = {
		{"", 		"000"},
		{"JGT", 	"001"},
		{"JEQ", 	"010"},
		{"JGE", 	"011"},
		{"JLT", 	"100"},
		{"JNE", 	"101"},
		{"JLE", 	"110"},
		{"JMP",		"111"}
	};


unordered_map <string,string> dests = { 	// d1 d2 d3 0 0 0
		{"", 		"000"},
		{"M", 		"001"},
		{"D", 		"010"},
		{"MD", 		"011"},
		{"A", 		"100"},
		{"AM", 		"101"},
		{"AD", 		"110"},
		{"AMD",		"111"}
	};


	


#endif
